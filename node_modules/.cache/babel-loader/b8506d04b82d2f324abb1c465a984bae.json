{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/Lambda/reactsw-vercel/src/components/People.js\";\nimport React from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\"; //People function definition, pass in data from App.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function People({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" PEOPLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 3,\n      children: data.map((person, i) => {\n        return /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: person.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"HEIGHT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: person.height\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"MASS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: person.mass\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"HAIR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: person.hair_color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n}\n_c = People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/reactsw-vercel/src/components/People.js"],"names":["React","Card","Grid","People","data","map","person","i","name","height","mass","hair_color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,mBAAzB,C,CAGA;;;;AACA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AACrC,sBACG;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAI,CAAjB;AAAA,gBAGKA,IAAI,CAACC,GAAL,CAAS,CAACC,MAAD,EAASC,CAAT,KAAe;AACrB,4BACC,QAAC,IAAD,CAAM,MAAN;AAAA,iCACI,QAAC,IAAD;AAAA,mCAEI,QAAC,IAAD,CAAM,OAAN;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAA,0BAAcD,MAAM,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,WAAN;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAIF,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,4BAAIH,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAMI;AAAA,4BAAIJ,MAAM,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,wBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAoBJ,CAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AAkBH,OAnBA;AAHL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADH;AA8BH;KA/BuBJ,M","sourcesContent":["import React from \"react\";\nimport {Card, Grid} from \"semantic-ui-react\";\n\n\n//People function definition, pass in data from App.js\nexport default function People({ data }) {\n    return (\n       <>\n           <h1> PEOPLE</h1>\n            {/* Set the display grid */}\n           <Grid columns = {3}>\n               {/* Map over data passed in from App.js\n                   For each person in data, return a grid card*/}\n               {data.map((person, i) => {\n                   return (\n                    <Grid.Column key = {i}>\n                        <Card>\n                            {/*Add comments for each card type*/}\n                            <Card.Content>\n                                <Card.Header>{person.name}</Card.Header>\n                                <Card.Description>\n                                    <strong>HEIGHT</strong>\n                                    <p>{person.height}</p>\n                                    <strong>MASS</strong>\n                                    <p>{person.mass}</p>\n                                    <strong>HAIR</strong>\n                                    <p>{person.hair_color}</p>\n                                </Card.Description>\n                            </Card.Content>\n                        </Card>\n                    </Grid.Column>\n                   )\n               })}\n           </Grid>\n       </>\n    )\n}"]},"metadata":{},"sourceType":"module"}