{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/Lambda/reactsw-vercel/src/components/Planets.js\";\nimport React from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\"; //Default planets function def, pass in data from app.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Planets({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" PLANETS \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 3,\n      children: data.map((planet, i) => {\n        return /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: planet.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"CLIMATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: planet.climate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"POPULATION\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: planet.population\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"DIAMETER\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: planet.diameter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Planets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/reactsw-vercel/src/components/Planets.js"],"names":["React","Card","Grid","Planets","data","map","planet","i","name","climate","population","diameter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,mBAAzB,C,CAEA;;;;AACA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA2B;AACtC,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAI,CAAjB;AAAA,gBAGKA,IAAI,CAACC,GAAL,CAAS,CAACC,MAAD,EAASC,CAAT,KAAe;AACrB,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA,iCACI,QAAC,IAAD;AAAA,mCAEI,QAAC,IAAD,CAAM,OAAN;AAAA,sCACI,QAAC,IAAD,CAAM,MAAN;AAAA,0BAAcD,MAAM,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,WAAN;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAIF,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,4BAAIH,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAMI;AAAA,4BAAIJ,MAAM,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,wBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAoBJ,CAApB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAkBH,OAnBA;AAHL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AA8BH;KA/BuBJ,O","sourcesContent":["import React from \"react\";\nimport {Card, Grid} from \"semantic-ui-react\";\n\n//Default planets function def, pass in data from app.js\nexport default function Planets({ data }) {\n    return (\n        <>\n            <h1> PLANETS </h1>\n            {/* Set the display grid */}\n            <Grid columns = {3}>\n                {/* Map over data passed in from App.js\n                   For each planet in data array, return a grid card*/}\n                {data.map((planet, i) => {\n                    return (\n                        <Grid.Column key = {i}>\n                            <Card>\n                                {/*Add comments for each card type*/}\n                                <Card.Content>\n                                    <Card.Header>{planet.name}</Card.Header>\n                                    <Card.Description>\n                                        <strong>CLIMATE</strong>\n                                        <p>{planet.climate}</p>\n                                        <strong>POPULATION</strong>\n                                        <p>{planet.population}</p>\n                                        <strong>DIAMETER</strong>\n                                        <p>{planet.diameter}</p>\n                                    </Card.Description>\n                                </Card.Content>\n                            </Card>\n                        </Grid.Column>\n                    )\n                })}\n            </Grid>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}